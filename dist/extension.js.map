{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://gleam-qol/./node_modules/copy-paste/index.js","webpack://gleam-qol/./node_modules/copy-paste/platform/android.js","webpack://gleam-qol/./node_modules/copy-paste/platform/darwin.js","webpack://gleam-qol/./node_modules/copy-paste/platform/linux.js","webpack://gleam-qol/./node_modules/copy-paste/platform/win32.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/dbcs-data.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/index.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/internal.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/sbcs-data.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/utf16.js","webpack://gleam-qol/./node_modules/iconv-lite/encodings/utf7.js","webpack://gleam-qol/./node_modules/iconv-lite/lib/bom-handling.js","webpack://gleam-qol/./node_modules/iconv-lite/lib/extend-node.js","webpack://gleam-qol/./node_modules/iconv-lite/lib/index.js","webpack://gleam-qol/./node_modules/iconv-lite/lib/streams.js","webpack://gleam-qol/./node_modules/safer-buffer/safer.js","webpack://gleam-qol/./src/context_menu.ts","webpack://gleam-qol/./src/erlang_abracadabra.ts","webpack://gleam-qol/./src/extension_sub.ts","webpack://gleam-qol/./src/gleam_beautify_imports.ts","webpack://gleam-qol/./src/gleam_generate_imports.ts","webpack://gleam-qol/./src/send_to.ts","webpack://gleam-qol/external commonjs \"vscode\"","webpack://gleam-qol/external node-commonjs \"buffer\"","webpack://gleam-qol/external node-commonjs \"child_process\"","webpack://gleam-qol/external node-commonjs \"fs\"","webpack://gleam-qol/external node-commonjs \"path\"","webpack://gleam-qol/external node-commonjs \"stream\"","webpack://gleam-qol/external node-commonjs \"string_decoder\"","webpack://gleam-qol/external node-commonjs \"util\"","webpack://gleam-qol/webpack/bootstrap","webpack://gleam-qol/./src/extension.ts"],"sourcesContent":["var child_process = require(\"child_process\");\nvar spawn = child_process.spawn;\nvar execSync = child_process.execSync\nvar util = require(\"util\");\n\nvar config;\n\nswitch(process.platform) {\n\tcase \"darwin\":\n\t\tconfig = require(\"./platform/darwin\");\n\t\tbreak;\n\tcase \"win32\":\n\t\tconfig = require(\"./platform/win32\");\n\t\tbreak;\n\tcase \"linux\":\n\t\tconfig = require(\"./platform/linux\");\n\t\tbreak;\n\tcase \"freebsd\":\n\t\tconfig = require(\"./platform/linux\");\n\t\tbreak;\n\tcase \"openbsd\":\n\t\tconfig = require(\"./platform/linux\");\n\t\tbreak;\n\tcase \"android\":\n\t\tconfig = require(\"./platform/android\");\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error(\"Unknown platform: '\" + process.platform + \"'.  Send this error to xavi.rmz@gmail.com.\");\n}\n\nvar noop = function() {};\n\nexports.copy = function(text, callback) {\n\tconst opts = { env: Object.assign({}, process.env, config.copy.env) };\n\tvar child = spawn(config.copy.command, config.copy.args, opts);\n\n\tvar done = (callback\n\t\t? function() { callback.apply(this, arguments); done = noop; }\n\t\t: function(err) { if(err) { throw err; } done = noop; }\n\t);\n\n\tvar err = [];\n\n\tchild.stdin.on(\"error\", function (err) { done(err); });\n\tchild\n\t\t.on(\"exit\", function() { done(null, text); })\n\t\t.on(\"error\", function(err) { done(err); })\n\t\t.stderr\n\t\t\t.on(\"data\", function(chunk) { err.push(chunk); })\n\t\t\t.on(\"end\", function() {\n\t\t\t\tif(err.length === 0) { return; }\n\t\t\t\tdone(new Error(config.decode(err)));\n\t\t\t})\n\t;\n\n\tif(!child.pid) { return text; }\n\n\tif(text?.pipe) { text.pipe(child.stdin); }\n\telse {\n\t\tvar output, type = Object.prototype.toString.call(text);\n\n\t\tif(type === \"[object String]\") { output = text; }\n\t\telse if(type === \"[object Object]\") { output = util.inspect(text, { depth: null }); }\n\t\telse if(type === \"[object Array]\") { output = util.inspect(text, { depth: null }); }\n\t\telse if(type === \"[object Null]\") { output = \"null\"; }\n\t\telse if(type === \"[object Undefined]\") { output = \"undefined\"; }\n\t\telse { output = text.toString(); }\n\n\t\tchild.stdin.end(config.encode(output));\n\t}\n\n\treturn text;\n};\n\nvar pasteCommand = [ config.paste.command ].concat(config.paste.args).join(\" \");\nexports.paste = function(callback) {\n\tif(execSync && !callback) { return config.decode(execSync(pasteCommand)); }\n\telse if(callback) {\n\t\tvar child = spawn(config.paste.command, config.paste.args);\n\n\t\tvar done = callback && function() { callback.apply(this, arguments); done = noop; };\n\n\t\tvar data = [], err = [];\n\n\t\tchild.on(\"error\", function(err) { done(err); });\n\t\tchild.stdout\n\t\t\t.on(\"data\", function(chunk) { data.push(chunk); })\n\t\t\t.on(\"end\", function() { done(null, config.decode(data)); })\n\t\t;\n\t\tchild.stderr\n\t\t\t.on(\"data\", function(chunk) { err.push(chunk); })\n\t\t\t.on(\"end\", function() {\n\t\t\t\tif(err.length === 0) { return; }\n\n\t\t\t\tdone(new Error(config.decode(err)));\n\t\t\t})\n\t\t;\n\t} else {\n\t\tthrow new Error(\"A synchronous version of paste is not supported on this platform.\");\n\t}\n};\n\nexports.silent = function() {\n\tthrow new Error(\"DEPRECATED: copy-paste is now always silent.\");\n};\n\nexports.noConflict = function() {\n\tthrow new Error(\"DEPRECATED: copy-paste no longer adds global variables by default.\");\n};\nexports.global = function() {\n\tglobal.copy = exports.copy;\n\tglobal.paste = exports.paste;\n\n\treturn exports;\n};\n","exports.copy = { command: \"termux-clipboard-set\", args: [] };\nexports.paste = { command: \"termux-clipboard-get\", args: [] };\nexports.paste.full_command = exports.paste.command;\nexports.encode = function(str) { return Buffer.from(str, \"utf8\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\treturn Buffer.concat(chunks).toString(\"utf8\");\n};\n","exports.copy = { command: \"pbcopy\", args: [], env: { LANG: \"en_US.UTF-8\" } };\nexports.paste = { command: \"pbpaste\", args: [] };\nexports.paste.full_command = exports.paste.command;\nexports.encode = function(str) { return Buffer.from(str, \"utf8\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\treturn Buffer.concat(chunks).toString(\"utf8\");\n};\n","exports.copy =\n \tprocess.env.WSL_DISTRO_NAME ?\n\t{ command: \"clip.exe\", args: [] } :\n  \t{ command: \"xclip\", args: [ \"-selection\", \"clipboard\" ] };\n\nexports.paste = { command: \"xclip\", args: [ \"-selection\", \"clipboard\", \"-o\" ] };\nexports.paste.full_command = [ exports.paste.command ].concat(exports.paste.args).join(\" \");\nexports.encode = function(str) { return Buffer.from(str, \"utf8\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\treturn Buffer.concat(chunks).toString(\"utf8\");\n};\n","var iconv = require(\"iconv-lite\");\nvar path = require(\"path\");\n\nvar vbsPath = path.join(__dirname, \".\\\\fallbacks\\\\paste.vbs\");\n\nvar paste = { command: \"cscript\", args: [ \"/Nologo\", vbsPath ] };\npaste.full_command = [ paste.command, paste.args[0], '\"'+vbsPath+'\"' ].join(\" \");\n\nexports.copy = { command: \"clip\", args: [] };\nexports.paste = paste;\n\nexports.encode = function(str) { return iconv.encode(str, \"utf16le\"); };\nexports.decode = function(chunks) {\n\tif(!Array.isArray(chunks)) { chunks = [ chunks ]; }\n\n\tvar b64 = iconv.decode(Buffer.concat(chunks), \"cp437\");\n\tb64 = b64.substring(0, b64.length - 2); // Chops off extra \"\\r\\n\"\n\n    // remove bom and decode\n    var result = Buffer.from(b64, \"base64\").subarray(3).toString(\"utf-8\");\n    return result;\n};\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport {\n  removePostFix,\n  setPathExt,\n  erlangPathToGleamPath,\n  gleamPathToErlangPath,\n  getPathExt,\n  gleamPathToErlangModulePath,\n  getModuleName,\n  getFileNameWithoutExtension,\n  removeArity,\n  findAllModuleNameDotFunctionName,\n  getSymbolUnderCursor,\n} from \"./extension_sub\";\nimport { send_to_clipboard, send_to_terminal } from \"./send_to\";\nimport {activate as activate_gleam_generate_imports} from \"./gleam_generate_imports\"\nimport {activate as activate_gleam_beautify_imports} from \"./gleam_beautify_imports\"\nimport {activate as activate_erlang_abracadabra} from \"./erlang_abracadabra\"\n\n\nfunction openDocument(path: string) {\n  let openPath = vscode.Uri.file(path); // サニタイズされたパス\n  vscode.workspace.openTextDocument(openPath).then((doc) => {\n    vscode.window.showTextDocument(doc);\n  });\n}\n\nasync function getFunctionName() {\n  const editor = vscode.window.activeTextEditor;\n\n  if (editor) {\n    let cursorPosition = editor.selection.active;\n    const doc = editor.document;\n\n    const symbols: vscode.DocumentSymbol[] =\n      await vscode.commands.executeCommand(\n        \"vscode.executeDocumentSymbolProvider\",\n        doc.uri\n      );\n\n    if (symbols) {\n      let functionSymbol = getEnclosingFunctionSymbol(symbols, cursorPosition);\n      if (functionSymbol) {\n        let functionName = functionSymbol.name;\n        return functionName;\n      }\n    }\n  }\n  return null;\n}\n\nfunction getEnclosingFunctionSymbol(\n  symbols: vscode.DocumentSymbol[],\n  position: vscode.Position\n): vscode.DocumentSymbol | undefined {\n  for (const symbol of symbols) {\n    if (symbol.range.contains(position)) {\n      if (symbol.kind === vscode.SymbolKind.Function) {\n        return symbol;\n      } else if (symbol.children.length > 0) {\n        return getEnclosingFunctionSymbol(symbol.children, position);\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction open_or_new_document(newFullPath: string) {\n  fs.access(newFullPath, fs.constants.F_OK, (err) => {\n    if (err) {\n      // ファイルが存在しない場合、新規作成\n      let dir = path.dirname(newFullPath);\n\n      // ディレクトリが存在しない場合、ディレクトリを作成\n      if (!fs.existsSync(dir)) {\n        fs.mkdirSync(dir, { recursive: true });\n      }\n\n      let file_header = \"\";\n      switch (getPathExt(newFullPath)) {\n        case \".gleam\":\n          file_header = \"pub \";\n          break;\n        case \".erl\":\n          let module_name = getModuleName(newFullPath);\n          file_header = `-module(${module_name}).\\n-compile(export_all).\\n\\n`;\n          break;\n        default:\n          break;\n      }\n\n      fs.writeFile(newFullPath, file_header, (err) => {\n        if (err) {\n          vscode.window.showErrorMessage(\"Failed to create file\");\n        } else {\n          openDocument(newFullPath);\n        }\n      });\n    } else {\n      // ファイルが存在する場合、開く\n      openDocument(newFullPath);\n    }\n  });\n}\n\nfunction transformPath(\n  workspaceRoot: string,\n  docPath: string,\n  srcDir: string,\n  srcExt: string,\n  dstDir: string,\n  dstExt: string,\n  postFix: string\n) {\n  let relativePath = \"/\" + path.relative(workspaceRoot, docPath);\n  console.log(`relativePath: ${relativePath}`);\n\n  let chooseFirst = true;\n  if (srcDir === dstDir) {\n    console.log(\"srcDir === dstDir\");\n    if (getPathExt(docPath) === srcExt) {\n      console.log(\"getPathExt(docPath) === srcExt\");\n      chooseFirst = true;\n    } else {\n      console.log(\"getPathExt(docPath) != srcExt\");\n      chooseFirst = false;\n    }\n  } else {\n    if (relativePath.indexOf(srcDir) !== -1) {\n      console.log(\"relativePath.indexOf(srcDir) !== -1\");\n      chooseFirst = true;\n    } else {\n      console.log(\"relativePath.indexOf(srcDir) == -1\");\n      chooseFirst = false;\n    }\n  }\n\n  let newPath = \"\";\n  if (chooseFirst) {\n    console.log(\"** chooseFirst **\");\n    newPath = relativePath.replace(srcDir, dstDir);\n\n    // ファイルパスの拡張子の前に \"_test\" を追加\n    let parsedPath = path.parse(newPath);\n    parsedPath.name += postFix;\n    //parsedPath.base = parsedPath.name + parsedPath.ext;\n    parsedPath.base = parsedPath.name + dstExt;\n    newPath = path.format(parsedPath);\n  } else {\n    console.log(\"** chooseSecond **\");\n    newPath = relativePath.replace(dstDir, srcDir);\n\n    // 拡張子の前にある_testを削除\n    //newPath = newPath.replace(/(_test)(?=\\.[^.]+$)/, \"\");\n    newPath = removePostFix(newPath, postFix);\n    newPath = setPathExt(newPath, srcExt);\n  }\n  console.log(`newPath: ${newPath}`);\n\n  let newFullPath = path.join(workspaceRoot, newPath).replace(\"//\", \"/\");\n  console.log(`newFullPath: ${newFullPath}`);\n\n  return newFullPath;\n}\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  console.log(\n    'Congratulations, your extension \"vscode-gleam-qol\" is now active!'\n  );\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  let disposable = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.helloWorld\",\n    () => {\n      // The code you place here will be executed every time your command is executed\n      // Display a message box to the user\n      vscode.window.showInformationMessage(\n        \"Hello World from vscode-gleam-qol!\"\n      );\n    }\n  );\n  context.subscriptions.push(disposable);\n\n  function generate_erlang_path_sender(send: (text: string) => void) {\n    return async () => {\n      const editor = vscode.window.activeTextEditor;\n      if (editor) {\n        const document = editor.document;\n\n        let docPath = document.fileName;\n        let workspaceFolders = vscode.workspace.workspaceFolders;\n        let function_name = await getFunctionName();\n        console.log(`function_name: ${function_name}`);\n        if (workspaceFolders) {\n          let workspaceRoot = workspaceFolders[0].uri.fsPath + \"/src\";\n          if (getPathExt(docPath) === \".gleam\") {\n            let module = gleamPathToErlangModulePath(workspaceRoot, docPath);\n            let erlang_path = module;\n            if (function_name != null) {\n              erlang_path = module + \":\" + function_name;\n            }\n            send(erlang_path);\n          } else {\n            //let module_name = getFileNameWithoutExtension( docPath );\n            let module_name = getModuleName(docPath);\n            let erlang_path = module_name;\n            if (function_name != null) {\n              function_name = removeArity(function_name);\n              erlang_path = module_name + \":\" + function_name;\n            }\n            send(erlang_path);\n          }\n        }\n      }\n    };\n  }\n\n\n  //\n  let cmd_copy_erlang_path = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.copy_erlang_path\",\n    generate_erlang_path_sender(send_to_clipboard)\n  );\n  context.subscriptions.push(cmd_copy_erlang_path);\n  //\n  let cmd_send_erlang_path_to_terminal = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.send_erlang_path_to_terminal\",\n    generate_erlang_path_sender((doc) => send_to_terminal(doc, false))\n  );\n  context.subscriptions.push(cmd_send_erlang_path_to_terminal);\n  //\n\n  //\n\n  let jump_to_ffi_or_gleam = () => {\n    const editor = vscode.window.activeTextEditor;\n    if (editor) {\n      const document = editor.document;\n\n      let docPath = document.fileName;\n      let workspaceFolders = vscode.workspace.workspaceFolders;\n      if (workspaceFolders) {\n        let workspaceRoot = workspaceFolders[0].uri.fsPath;\n        if (getPathExt(docPath) === \".erl\") {\n          docPath = setPathExt(\n            erlangPathToGleamPath(workspaceRoot, docPath),\n            \".erl\"\n          );\n        }\n\n        let newFullPath = transformPath(\n          workspaceRoot,\n          docPath,\n          \"/src/\",\n          \".gleam\",\n          \"/src/\",\n          \".erl\",\n          \"_ffi\"\n        );\n        if (getPathExt(newFullPath) === \".erl\") {\n          console.log(`newFullPath: ${newFullPath}`);\n          console.log(`workspaceRoot: ${workspaceRoot}`);\n          newFullPath = gleamPathToErlangPath(\n            workspaceRoot + \"/src\",\n            newFullPath\n          );\n          console.log(`newFullPath 2: ${newFullPath}`);\n        }\n        open_or_new_document(newFullPath);\n\n        let function_name = getFunctionName();\n        console.log(`function_name: ${function_name}`);\n      }\n    }\n  };\n\n  //\n  let cmd_jump_to_erlang_ffi = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.jump_to_erlang_ffi\",\n    jump_to_ffi_or_gleam\n  );\n  context.subscriptions.push(cmd_jump_to_erlang_ffi);\n\n  //\n  let cmd_jump_to_gleam = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.jump_to_gleam\",\n    jump_to_ffi_or_gleam\n  );\n  context.subscriptions.push(cmd_jump_to_gleam);\n  //\n\n  let jump_to_test_or_src = () => {\n    const editor = vscode.window.activeTextEditor;\n    if (editor) {\n      const document = editor.document;\n\n      let docPath = document.fileName;\n      let workspaceFolders = vscode.workspace.workspaceFolders;\n      if (workspaceFolders) {\n        let workspaceRoot = workspaceFolders[0].uri.fsPath;\n        let newFullPath = transformPath(\n          workspaceRoot,\n          docPath,\n          \"/src/\",\n          \".gleam\",\n          \"/test/\",\n          \".gleam\",\n          \"_test\"\n        );\n        open_or_new_document(newFullPath);\n\n        let function_name = getFunctionName();\n        console.log(`function_name: ${function_name}`);\n      }\n    }\n  };\n\n  //\n  let cmd_jump_to_test = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.jump_to_test\",\n    jump_to_test_or_src\n  );\n  context.subscriptions.push(cmd_jump_to_test);\n\n  //\n  let cmd_jump_to_src = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.jump_to_src\",\n    jump_to_test_or_src\n  );\n  context.subscriptions.push(cmd_jump_to_src);\n\n  //\n  activate_gleam_generate_imports(context);\n  activate_gleam_beautify_imports(context);\n  activate_erlang_abracadabra(context);\n}\n\n// This method is called when your extension is deactivated\nexport function deactivate() {}\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport {\n  removePostFix,\n  setPathExt,\n  erlangPathToGleamPath,\n  gleamPathToErlangPath,\n  getPathExt,\n  gleamPathToErlangModulePath,\n  getModuleName,\n  getFileNameWithoutExtension,\n  removeArity,\n  findAllModuleNameDotFunctionName,\n  getSymbolUnderCursor,\n} from \"./extension_sub\";\nimport { send_to_clipboard, send_to_terminal } from \"./send_to\";\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n  function erlang_abracadabra() {\n    const editor = vscode.window.activeTextEditor;\n    if (editor) {\n      const document = editor.document;\n\n      const module_name = getModuleName(document.fileName);\n\n      const module_regex = /-\\s*module\\s*\\(/;\n      const export_regex = /-\\s*export\\s*\\(/;\n      const export_all_regex = /-\\s*compile\\s*\\(\\s*export_all/;\n\n      let def_module = -1;\n      let def_export = -1;\n      let def_export_all = -1;\n      editor.edit((editBuilder) => {\n        for (let i = 0; i < document.lineCount; i++) {\n          const line = document.lineAt(i);\n          const text = line.text;\n          //console.log(\"line: \",i,text)\n          if (def_export == -1 && export_regex.test(text)) {\n            //console.log(\"export_regex: \",i);\n            def_export = i;\n          }\n          if (def_export_all == -1 && export_all_regex.test(text)) {\n            //console.log(\"export_all_regex: \",i);\n            def_export_all = i;\n          } else if (def_module == -1 && module_regex.test(text)) {\n            //console.log(\"module_regex: \",i);\n            def_module = i;\n\n            const regex = /-\\s*module\\s*\\(\\s*(\\w+)\\s*\\)/;\n            const match = regex.exec(text);\n            if (match && match[1]) {\n              const oldName = match[1];\n              if (oldName != module_name) {\n                const newText = text.replace(oldName, module_name);\n                const range = new vscode.Range(i, 0, i, text.length);\n                editBuilder.replace(range, newText);\n              }\n            }\n          }\n        }\n        //console.log(\"def_module: \" + def_module);\n        //console.log(\"def_export: \" + def_export);\n        //console.log(\"def_export_all: \" + def_export_all);\n\n        if (def_module == -1) {\n          const position = new vscode.Position(0, 0);\n          editBuilder.insert(position, `-module(${module_name}).\\n`);\n          def_module = 0;\n        }\n\n        if (def_export == -1 && def_export_all == -1) {\n          const position = new vscode.Position(def_module + 1, 0);\n          editBuilder.insert(position, `-compile(export_all).\\n`);\n          def_module = 0;\n        }\n      });\n    }\n  }\n\n\n  //\n  let cmd_erlang_abracadabra = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.erlang_abracadabra\",\n    erlang_abracadabra\n  );\n  context.subscriptions.push(cmd_erlang_abracadabra);\n}","import * as path from \"path\";\n//import * as fs from \"fs\";\n\n// --------------------------------------------------------------------------------------------------------------------------------\n// vscode independents\n// --------------------------------------------------------------------------------------------------------------------------------\nexport function removePostFixFromPath(path: string, postFix: string): string {\n  const index = path.lastIndexOf(postFix);\n\n  // postFixがpath内に存在しない場合、もとのpathを返す\n  if (index === -1) {\n    return path;\n  }\n\n  // pathから拡張子の手前にあるpostFixを取り除く\n  const pathWithoutPostFix =\n    path.substring(0, index) + path.substring(index + postFix.length);\n\n  return pathWithoutPostFix;\n}\n\n// モジュール名を取得する\nexport function getModuleName(srcPath: string) {\n  let parsedPath = path.parse(srcPath);\n  return parsedPath.name;\n}\n\n// 拡張子を取得する (例: \".erl\")\nexport function getPathExt(srcPath: string) {\n  let parsedPath = path.parse(srcPath);\n  return parsedPath.ext;\n}\n\nexport function setPathExt(srcPath: string, newExt: string) {\n  let parsedPath = path.parse(srcPath);\n  //parsedPath.base = parsedPath.name + parsedPath.ext;\n  parsedPath.base = parsedPath.name + newExt;\n  return path.format(parsedPath);\n}\n\nfunction replaceAll(str: string, from: string, to: string) {\n  let replaced = str.replace(from, to);\n  if (replaced === str) {\n    return replaced;\n  }\n  return replaceAll(replaced, from, to);\n}\n\nexport function erlangPathToGleamPath(workspaceRoot: string, erlPath: string) {\n  let relativePath = path.relative(workspaceRoot, erlPath);\n  console.log(\"erlangPathToGleamPath erlPath: \" + relativePath);\n  console.log(\"erlangPathToGleamPath relative: \" + relativePath);\n  return setPathExt(\n    workspaceRoot + \"/\" + replaceAll(relativePath, \"@\", \"/\"),\n    \".gleam\"\n  );\n}\n\nexport function gleamPathToErlangPath(\n  workspaceRoot: string,\n  gleamPath: string\n) {\n  let relativePath = path.relative(workspaceRoot, gleamPath);\n  return setPathExt(\n    workspaceRoot + \"/\" + replaceAll(relativePath, \"/\", \"@\"),\n    \".erl\"\n  );\n}\n\nexport function gleamPathToErlangModulePath(\n  workspaceRoot: string,\n  gleamPath: string\n) {\n  let relativePath = path.relative(workspaceRoot, gleamPath);\n  return setPathExt(replaceAll(relativePath, \"/\", \"@\"), \"\");\n}\n\nexport function setRootSrcDir(\n  workspaceRoot: string,\n  targetPath: string,\n  rootName: string\n) {\n  let relativePath = path.relative(workspaceRoot, targetPath);\n  let components = relativePath.split(\"/\");\n  components[0] = rootName;\n  return workspaceRoot + components.join(\"/\");\n}\nexport function setSrcDir(workspaceRoot: string, targetPath: string) {\n  return setRootSrcDir(workspaceRoot, targetPath, \"src\");\n}\n\nexport function addPostFix(srcPath: string, postFix: string) {\n  let parsedPath = path.parse(srcPath);\n  //parsedPath.name = parsedPath.name + postFix;\n  parsedPath.base = parsedPath.name + postFix + parsedPath.ext;\n  return path.format(parsedPath);\n}\n\nexport function removePostFix(srcPath: string, postFix: string) {\n  let parsedPath = path.parse(srcPath);\n  if (parsedPath.name.endsWith(postFix)) {\n    parsedPath.name = parsedPath.name.replace(postFix, \"\");\n  }\n  parsedPath.base = parsedPath.name + parsedPath.ext;\n  return path.format(parsedPath);\n}\n\nexport function getFileNameWithoutExtension(fullPath: string): string {\n  const baseName = \"\" + fullPath.split(\"/\").pop(); // フルパスからファイル名を取得\n  const fileNameWithoutExtension = baseName.replace(/\\.[^/.]+$/, \"\"); // 拡張子を削除\n  return \"\" + fileNameWithoutExtension;\n}\n\n// remove arity from function name of erlang\n// ex: \"foo/1\" -> \"foo\"\nexport function removeArity(function_name: string): string {\n  return function_name.split(\"/\")[0];\n}\n\n// --------------------------------------------------------------------------------------------------------------------------------\n// vscode dependents\n// --------------------------------------------------------------------------------------------------------------------------------\nimport * as vscode from \"vscode\";\n\nexport function getSymbolUnderCursor() {\n  const editor = vscode.window.activeTextEditor;\n  if (editor) {\n    const position = editor.selection.active;\n    const line = position.line;\n    const character = position.character;\n\n    // Get text at the cursor position\n    const lineText = editor.document.lineAt(line).text;\n\n    //\n    function isNamePathChar(chr: string) {\n      return chr.match(/[a-zA-Z0-9_@\\.]/);\n    }\n    function searchLeftDelimiter(lineText: string, ip: number): number {\n      for (let i = ip; i >= 0; i--) {\n        let chr = lineText.charAt(i);\n        if (isNamePathChar(chr)) {\n          continue;\n        }\n        return i;\n      }\n      return -1;\n    }\n\n    function searchRightDelimiter(lineText: string, ip: number): number {\n      for (let i = ip; i < lineText.length; i++) {\n        let chr = lineText.charAt(i);\n        if (isNamePathChar(chr)) {\n          continue;\n        }\n        return i;\n      }\n      return -1;\n    }\n\n    let li = searchLeftDelimiter(lineText, character);\n    let ri = searchRightDelimiter(lineText, character);\n    if (li === -1 || ri === -1) {\n      return \"\";\n    }\n    let symbol = lineText.substring(li + 1, ri);\n    console.log(\"symbol: \", symbol);\n    return symbol;\n  }\n}\n\nexport function findModuleNameDotFunctionName(lineText: string): string {\n  let regexp = /([a-zA-Z0-9_@]+)\\.([a-zA-Z0-9_@]+)/g;\n  let match = regexp.exec(lineText);\n  if (match) {\n    return match[0];\n  }\n  return \"\";\n}\n\n// find all 'module_name.function_name' patterns in the document\nexport function findAllModuleNameDotFunctionName(\n  document: vscode.TextDocument\n): string[] {\n  let moduleNameDotFunctionNameSet: Set<string> = new Set();\n  for (let i = 0; i < document.lineCount; i++) {\n    let lineText = document.lineAt(i).text;\n    let moduleNameDotFunctionName = findModuleNameDotFunctionName(lineText);\n    if (moduleNameDotFunctionName) {\n      moduleNameDotFunctionNameSet.add(moduleNameDotFunctionName);\n    }\n  }\n  return Array.from(moduleNameDotFunctionNameSet.values()).sort().reverse();\n}\n","import * as vscode from \"vscode\";\n\nexport function activate(context: vscode.ExtensionContext) {\n  let disposable = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.gleam_beautify_import\",\n    function () {\n      const editor = vscode.window.activeTextEditor;\n\n      if (editor) {\n        const document = editor.document;\n        const text = document.getText();\n\n        // 各行に分割\n        const lines = text.split(\"\\n\");\n\n        // importで始まる行を抽出\n        const importLines = lines.filter((line: string) => line.startsWith(\"import\"));\n\n        // import行をソート\n        importLines.sort();\n\n        // importで始まる行を除去\n        const remainingLines = lines.filter(\n          (line: string) => !line.startsWith(\"import\")\n        );\n\n        // ソートされたimport行と残りの行を連結\n        const sortedText =\n          importLines.join(\"\\n\").trim() +\n          \"\\n\\n\" +\n          remainingLines.join(\"\\n\").trim();\n\n        // ドキュメント全体を新しいテキストで置き換える\n        editor.edit((editBuilder) => {\n          const startPos = new vscode.Position(0, 0);\n          const endPos = new vscode.Position(\n            document.lineCount - 1,\n            document.lineAt(document.lineCount - 1).text.length\n          );\n          const range = new vscode.Range(startPos, endPos);\n\n          editBuilder.replace(range, sortedText);\n        });\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport {\n  removePostFix,\n  setPathExt,\n  erlangPathToGleamPath,\n  gleamPathToErlangPath,\n  getPathExt,\n  gleamPathToErlangModulePath,\n  getModuleName,\n  getFileNameWithoutExtension,\n  removeArity,\n  findAllModuleNameDotFunctionName,\n  getSymbolUnderCursor,\n} from \"./extension_sub\";\nimport { send_to_clipboard, send_to_terminal } from \"./send_to\";\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\n  //\n  function gleam_auto_import() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) return;\n\n    const document = editor.document;\n\n    let entries = findAllModuleNameDotFunctionName(document);\n\n    // dictionary: module_name: [function_name,...]\n    let modules = new Map<string, string[]>();\n    for (let entry of entries) {\n      let [module_name, function_name] = entry.split(\".\");\n      if (modules.has(module_name)) {\n        let function_names = modules.get(module_name);\n        if (function_names) {\n          function_names.push(function_name);\n        }\n      } else {\n        modules.set(module_name, [function_name]);\n      }\n    }\n\n    // comment out the overlapping import statements\n    let target_imports: string[] = [];\n    for (let module_name of modules.keys()) {\n      target_imports.push(`import gleam/${module_name}`);\n    }\n    editor.edit((editBuilder) => {\n      for (let i = 0; i < document.lineCount; i++) {\n        const line = document.lineAt(i);\n        const text = line.text;\n        for (let target_import of target_imports) {\n          if (text.startsWith(target_import)) {\n            const range = new vscode.Range(i, 0, i, text.length);\n            editBuilder.replace(range, \"//QoL: \" + text);\n          }\n        }\n      }\n\n      // insert import statement to the top of the document\n      let import_statements = \"\";\n      //for (let [module_name, function_names] of modules) {\n      //  import_statements += `import gleam/${module_name}.\\{${function_names.join(\n      //    \", \"\n      //  )}\\}\\n`;\n      //}\n      for (let module_name of modules.keys()) {\n        import_statements += `import gleam/${module_name}\\n`;\n      }\n\n      const position = new vscode.Position(0, 0);\n      editBuilder.insert(position, import_statements);\n    });\n  }\n\n  let cmd_gleam_auto_import = vscode.commands.registerCommand(\n    \"vscode-gleam-qol.gleam_auto_import\",\n    gleam_auto_import\n  );\n  context.subscriptions.push(cmd_gleam_auto_import);\n\n}","import * as vscode from \"vscode\";\nimport * as cp from 'copy-paste';\n\nexport function send_to_clipboard(text: string) {\n    cp.copy(text, (err) => {\n        if (err) {\n            vscode.window.showErrorMessage('Failed to copy text to clipboard');\n        } else {\n            vscode.window.showInformationMessage('Text copied to clipboard');\n        }\n    });\n}\n\nexport function send_to_terminal(text: string,cr=true) {\n    let terminal = vscode.window.activeTerminal;\n    if (terminal) {\n        terminal.sendText(text,cr);\n        vscode.window.showInformationMessage('Text sent to terminal');\n    } else {\n        vscode.window.showErrorMessage('No active terminals');\n    }\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport {activate as activateGleamRepl} from './gleam_repl';\nimport {activate as activateContextMenu} from './context_menu';\n\nexport function activate(context: vscode.ExtensionContext) {\n    console.log(\"gleam-qol:extension activated\");\n    //activateGleamRepl(context);\n    activateContextMenu(context);\n}\n"],"names":["config","child_process","spawn","execSync","util","process","platform","Error","noop","exports","copy","text","callback","opts","env","Object","assign","child","command","args","done","apply","this","arguments","err","stdin","on","stderr","chunk","push","length","decode","pid","pipe","output","type","prototype","toString","call","inspect","depth","end","encode","pasteCommand","paste","concat","join","data","stdout","silent","noConflict","global","full_command","str","Buffer","from","chunks","Array","isArray","LANG","WSL_DISTRO_NAME","iconv","vbsPath","__dirname","b64","substring","subarray","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","SEQ_START","NODE_START","UNASSIGNED_NODE","i","codecOptions","encodingName","table","mappingTable","decodeTables","slice","decodeTableSeq","_addDecodeChunk","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","j","to","_fillEncodeTable","encodeAdd","uChar","hasOwnProperty","_setEncodeChar","charCodeAt","defCharSB","defaultCharSingleByte","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","options","codec","leadSurrogate","seqObj","undefined","DBCSDecoder","nodeIdx","prevBuf","alloc","findIdx","l","r","mid","Math","floor","encoder","decoder","_getDecodeTrieNode","addr","bytes","node","curAddr","parseInt","writeTable","k","part","code","codeTrail","len","seq","m","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","write","newBuf","nextChar","resCode","subtable","idx","uChars","gbChars","buf","prevBufOffset","seqStart","curByte","curSeq","ptr","uCodeLead","ret","module","modules","enc","InternalCodec","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","res","String","fromCharCode","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","tmp","buf2","utf16","encoding","getDecoder","trail","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","replace","bind","base64Regex","base64Chars","test","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars","PrependBOMWrapper","StripBOMWrapper","pass","PrependBOM","StripBOM","stripBOM","original","supportsNodeEncodingsExtension","Uint8Array","extendNodeEncodings","console","error","nodeNativeEncodings","isNativeEncoding","toLowerCase","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","offset","isFinite","swap","remaining","RangeError","BufferIsEncoding","isEncoding","encodingExists","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","supportsStreams","Readable","ReadableSetEncoding","setEncoding","_readableState","collect","_collect","undoExtendNodeEncodings","bomHandling","encodings","skipDecodeWarning","getCodec","e","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","key","nodeVer","versions","nodeVerArr","split","map","Number","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","create","constructor","value","_transform","_flush","cb","isBuffer","buffer","safer","Safer","encodingOrOffset","TypeError","size","fill","kStringMaxLength","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","openDocument","path","openPath","vscode","Uri","file","workspace","openTextDocument","then","doc","window","showTextDocument","async","getFunctionName","editor","activeTextEditor","cursorPosition","selection","active","document","symbols","commands","executeCommand","uri","functionSymbol","getEnclosingFunctionSymbol","name","position","symbol","range","contains","kind","SymbolKind","Function","children","open_or_new_document","newFullPath","fs","access","F_OK","dir","dirname","existsSync","mkdirSync","recursive","file_header","getPathExt","getModuleName","writeFile","showErrorMessage","transformPath","workspaceRoot","docPath","srcDir","srcExt","dstDir","dstExt","postFix","relativePath","relative","log","chooseFirst","indexOf","newPath","parsedPath","parse","base","format","removePostFix","setPathExt","context","disposable","registerCommand","showInformationMessage","generate_erlang_path_sender","send","fileName","workspaceFolders","function_name","fsPath","gleamPathToErlangModulePath","erlang_path","module_name","removeArity","subscriptions","cmd_copy_erlang_path","send_to_clipboard","cmd_send_erlang_path_to_terminal","send_to_terminal","jump_to_ffi_or_gleam","erlangPathToGleamPath","gleamPathToErlangPath","cmd_jump_to_erlang_ffi","cmd_jump_to_gleam","jump_to_test_or_src","cmd_jump_to_test","cmd_jump_to_src","activate","cmd_erlang_abracadabra","module_regex","export_regex","export_all_regex","def_module","def_export","def_export_all","edit","editBuilder","lineCount","lineAt","match","exec","oldName","newText","Range","Position","insert","srcPath","newExt","replaceAll","replaced","setRootSrcDir","targetPath","rootName","components","index","lastIndexOf","ext","erlPath","gleamPath","endsWith","fullPath","pop","findModuleNameDotFunctionName","lineText","line","character","isNamePathChar","chr","searchLeftDelimiter","ip","charAt","searchRightDelimiter","li","ri","moduleNameDotFunctionNameSet","Set","moduleNameDotFunctionName","add","values","sort","reverse","lines","getText","importLines","filter","startsWith","remainingLines","sortedText","trim","startPos","endPos","cmd_gleam_auto_import","entries","findAllModuleNameDotFunctionName","Map","entry","has","function_names","get","set","target_imports","keys","target_import","import_statements","cp","cr","terminal","activeTerminal","sendText","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}